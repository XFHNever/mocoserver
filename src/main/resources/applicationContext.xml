<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mongo="http://www.springframework.org/schema/data/mongo"
	xsi:schemaLocation="http://www.springframework.org/schema/context  
          http://www.springframework.org/schema/context/spring-context-3.0.xsd  
          http://www.springframework.org/schema/data/mongo  
          http://www.springframework.org/schema/data/mongo/spring-mongo-1.0.xsd  
          http://www.springframework.org/schema/beans  
          http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">

	<context:annotation-config />
	<context:component-scan base-package="com.mongo.*" />
	<context:property-placeholder location="classpath:/mongo.properties" />
	<mongo:mongo host="${mongo.host}" port="${mongo.port}">
		<mongo:options connections-per-host="${mongo.connectionsPerHost}"
			threads-allowed-to-block-for-connection-multiplier="${mongo.threadsAllowedToBlockForConnectionMultiplier}"
			connect-timeout="${mongo.connectTimeout}" max-wait-time="${mongo.maxWaitTime}"
			auto-connect-retry="${mongo.autoConnectRetry}" socket-keep-alive="${mongo.socketKeepAlive}"
			socket-timeout="${mongo.socketTimeout}" slave-ok="${mongo.slaveOk}"
			write-number="1" write-timeout="0" write-fsync="true" />
	</mongo:mongo>
	<mongo:db-factory dbname="mocoserver" mongo-ref="mongo" />
<!--  -->
	<bean id="mongoTemplate" class="org.springframework.data.mongodb.core.MongoTemplate">
		<constructor-arg  ref="mongo" />
		<constructor-arg value="mocoserver" />
	</bean>

 	<!-- Dao configuration -->	
 	<bean id="ConfigItemDao" class="com.stubhub.moco.dao.impl.ConfigItemDaoImpl"></bean>
 
 	<!-- Service Configuration -->
 	<bean id="ConfigItemService" class="com.stubhub.moco.service.impl.ConfigItemServiceImpl">
 		<property name="ConfigItemDao">
 			<ref bean="ConfigItemDao"/>
 		</property>
 	</bean>
 	
 	<!-- Action configuration -->
 	<bean id="CreateItemAction" class="com.stubhub.moco.action.CreateItemAction">
 		<property name="ConfigItemService">
 			<ref bean="ConfigItemService"/>
 		</property>
 	</bean>
 	
 	<bean id="LoadDataAction" class="com.stubhub.moco.action.LoadDataAction">
 		<property name="ConfigItemService">
 			<ref bean="ConfigItemService"/>
 		</property>
 	</bean>

	<bean id="DeleteItemAction" class="com.stubhub.moco.action.DeleteItemAction">
 		<property name="ConfigItemService">
 			<ref bean="ConfigItemService"/>
 		</property>
 	</bean> 	
 	
	<bean id="ModifyItemAction" class="com.stubhub.moco.action.ModifyItemAction">
 		<property name="ConfigItemService">
 			<ref bean="ConfigItemService"/>
 		</property>
 	</bean> 	
 	
 	<!-- QuartzJobBean configuration -->
 	<bean name="myjob" class="org.springframework.scheduling.quartz.JobDetailBean">
 		<property name="jobClass" value="com.stubhub.moco.timer.SynchroJob"/>
 		<!-- 为任务Bean注入属性 -->
	    <property name="jobDataAsMap">
           <map>
             <!--程序在10s之后首次调用你的TestJob-->
             <entry key="timeout" value="10" />
             <entry key="ConfigItemService">
             	<ref local="ConfigItemService"/>
             </entry>
           </map>
	    </property>
 	</bean>
 	
 	 <!-- 定义触发器来管理任务Bean -->
	 <bean id="myTrigger" class="org.springframework.scheduling.quartz.SimpleTriggerBean">
	     <property name="jobDetail">
	         <ref bean="myjob"/>
	     </property>
	     <property name="startDelay">  
	         <value>6000</value>  
	         <!--    这里是服务启动后延时多少时间,开始计时任务,单位ms-->  
	     </property>  
	     <!-- 每隔100s中执行一次 -->
	     <property name="repeatInterval">
	         <value>100000</value>
	     </property>
	
	 </bean>
	 
	 <bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
	     <property name="triggers">
	       <list>
	         <ref bean="myTrigger"/>
	       </list>
	     </property>
	 </bean>
</beans>